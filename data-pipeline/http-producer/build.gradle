import com.github.davidmc24.gradle.plugin.avro.GenerateAvroJavaTask

plugins {
    id 'java'
    id "com.github.davidmc24.gradle.plugin.avro" version "1.5.0"

    id "io.freefair.lombok" version "6.0.0-m2"
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url "https://packages.confluent.io/maven"
    }
}


dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    testImplementation ('io.dropwizard:dropwizard-testing:1.3.3') {
        exclude (group: "org.slf4j", module: "log4j-over-slf4j")
    }
    implementation ('io.dropwizard:dropwizard-core:1.3.3') {
        exclude (group: "org.slf4j", module: "log4j-over-slf4j")
    }

    implementation 'org.apache.kafka:kafka-clients:2.3.0'

    implementation 'org.junit.platform:junit-platform-commons:1.9.2'


    testImplementation 'org.awaitility:awaitility:4.2.0'

    implementation 'org.apache.avro:avro:1.11.1'
    implementation 'org.apache.avro:avro-tools:1.11.1'

    implementation 'io.confluent:kafka-avro-serializer:5.3.0'


    implementation project(':kafka-cluster')
}

test {
    useJUnitPlatform()
}

def generateAvro = tasks.register("generateAvro", GenerateAvroJavaTask) {
    source("src/main/resources/avro")
    outputDir = file("src/main/java/")
}

tasks.named("compileJava").configure {
    source(generateAvro)
}